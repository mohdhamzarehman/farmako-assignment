// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/coupons/applicable": {
            "get": {
                "description": "Get all applicable coupons for a cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get applicable coupons",
                "parameters": [
                    {
                        "description": "Cart details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ApplicableCouponsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ApplicableCouponsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/coupons/validate": {
            "post": {
                "description": "Validate a coupon code against cart items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Validate coupon",
                "parameters": [
                    {
                        "description": "Coupon validation details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CouponValidationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CouponValidationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health of the system and its dependencies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.ApplicableCoupon": {
            "type": "object",
            "properties": {
                "coupon_code": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                }
            }
        },
        "domain.ApplicableCouponsRequest": {
            "type": "object",
            "properties": {
                "cart_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CartItem"
                    }
                },
                "order_total": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "domain.ApplicableCouponsResponse": {
            "type": "object",
            "properties": {
                "applicable_coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ApplicableCoupon"
                    }
                }
            }
        },
        "domain.CartItem": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "domain.Coupon": {
            "description": "Coupon information",
            "type": "object",
            "properties": {
                "applicable_categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicable_medicine_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discount_type": {
                    "$ref": "#/definitions/domain.DiscountType"
                },
                "discount_value": {
                    "type": "number"
                },
                "expiry_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_usage_per_user": {
                    "type": "integer"
                },
                "min_order_value": {
                    "type": "number"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "usage_type": {
                    "$ref": "#/definitions/domain.UsageType"
                },
                "valid_time_window": {
                    "$ref": "#/definitions/domain.TimeWindow"
                }
            }
        },
        "domain.CouponRequest": {
            "description": "Request to get applicable coupons",
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "medicine_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order_value": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.CouponValidationRequest": {
            "description": "Request to validate a coupon",
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string"
                },
                "medicine_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order_value": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.CouponValidationResponse": {
            "description": "Response for coupon validation",
            "type": "object",
            "properties": {
                "discount": {
                    "type": "number"
                },
                "final_amount": {
                    "type": "number"
                },
                "is_valid": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "domain.DiscountType": {
            "type": "string",
            "enum": [
                "percentage",
                "fixed"
            ],
            "x-enum-varnames": [
                "Percentage",
                "Fixed"
            ]
        },
        "domain.TimeWindow": {
            "description": "Time window for coupon validity",
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "domain.UsageType": {
            "type": "string",
            "enum": [
                "one_time",
                "multi_use",
                "time_based"
            ],
            "x-enum-varnames": [
                "OneTime",
                "MultiUse",
                "TimeBased"
            ]
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.HealthResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Coupon System API",
	Description:      "A coupon management system for medicine ordering platform",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
